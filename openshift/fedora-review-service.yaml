---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: fedora-review-service-fedmsg
spec:
  selector:
    matchLabels:
      component: fedora-review-service-fedmsg
  template:
    metadata:
      labels:
        component: fedora-review-service-fedmsg
    spec:
      volumes:
        - name: persistent
          persistentVolumeClaim:
            claimName: persistent
      containers:
        - name: fedora-review-service-fedmsg
          image: quay.io/jkadlcik/fedora-review-service:latest
          env:
            - name: PYTHONPATH
              value: /src
            - name: CONFIG
              value: /etc/fedora-review-service/fedora-review-service-prod.yaml
            - name: FEDORA_MESSAGING_CONF
              value: /etc/fedora-review-service/fedora.toml
          volumeMounts:
            - name: persistent
              mountPath: /persistent
          resources:
            requests:
              memory: "400Mi"
              cpu: "500m"
            limits:
              memory: "400Mi"
              cpu: "500m"
  replicas: 1
  strategy:
    type: Recreate
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fedmsg-config
data:
  fedora.toml: |-
    amqp_url = "amqps://fedora:@rabbitmq.fedoraproject.org/%2Fpublic_pubsub"
    callback = "fedora_messaging.example:printer"

    [tls]
    ca_cert = "/etc/fedora-messaging/cacert.pem"
    keyfile = "/etc/fedora-messaging/fedora-key.pem"
    certfile = "/etc/fedora-messaging/fedora-cert.pem"

    [client_properties]
    app = "Example Application"
    # Some suggested extra fields:
    # URL of the project that provides this consumer
    app_url = "https://github.com/fedora-infra/fedora-messaging"
    # Contact emails for the maintainer(s) of the consumer - in case the
    # broker admin needs to contact them, for e.g.
    app_contacts_email = ["jcline@fedoraproject.org"]

    [exchanges."amq.topic"]
    type = "topic"
    durable = true
    auto_delete = false
    arguments = {}

    # Queue names *must* be in the normal UUID format: run "uuidgen" and use the
    # output as your queue name. If your queue is not exclusive, anyone can connect
    # and consume from it, causing you to miss messages, so do not share your queue
    # name. Any queues that are not auto-deleted on disconnect are garbage-collected
    # after approximately one hour.
    #
    # If you require a stronger guarantee about delivery, please talk to Fedora's
    # Infrastructure team.
    [queues.f7acea2b-d893-4c08-94f6-8025ee2d646c]
    # Keep messages on broker restart
    durable = true
    # Delete the queue when the client terminates
    auto_delete = true
    # Refuse multiple simultaneous consumers
    exclusive = true
    arguments = {}

    [[bindings]]
    queue = "f7acea2b-d893-4c08-94f6-8025ee2d646c"
    exchange = "amq.topic"
    routing_keys = ["org.fedoraproject.prod.copr.build.start", "org.fedoraproject.prod.copr.build.end",
    "org.fedoraproject.prod.buildsys.task.state.change", "org.fedoraproject.prod.buildsys.build.state.change",
    "org.fedoraproject.prod.git.receive", "org.fedoraproject.prod.pagure.pull-request.comment.added",
    "org.fedoraproject.prod.hotness.update.bug.file"]

    [consumer_config]
    example_key = "for my consumer"

    [qos]
    prefetch_size = 0
    prefetch_count = 25

    [log_config]
    version = 1
    disable_existing_loggers = true

    [log_config.formatters.simple]
    format = "[%(asctime)s %(levelname)s %(name)s] %(message)s"

    [log_config.handlers.console]
    class = "logging.StreamHandler"
    formatter = "simple"
    stream = "ext://sys.stdout"

    [log_config.loggers.fedora_messaging]
    level = "INFO"
    propagate = false
    handlers = ["console"]

    [log_config.loggers.twisted]
    level = "INFO"
    propagate = false
    handlers = ["console"]

    [log_config.loggers.pika]
    level = "WARNING"
    propagate = false
    handlers = ["console"]

    # If your consumer sets up a logger, you must add a configuration for it
    # here in order for the messages to show up.
    [log_config.loggers.packit_service_fedmsg]
    level = "DEBUG"
    propagate = false
    handlers = ["console"]

    [log_config.root]
    level = "ERROR"
    handlers = ["console"]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: persistent
  name: persistent
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
